@model SuperKidCity.Models.StateViewModel

@{
    ViewBag.Title = "Add Cities";
    int limit = Model.Cities.Count > 0 ? Model.Cities.Count : 5;
    if (Model.Cities.Count == 0)
    {
        ViewBag.Success = false;
    }
}

<br />
<br />

@if (ViewBag.Success)
{
    <p class="text-capitalize text-center text-success">
        @ViewBag.Msg
    </p>
}
else
{
    <p class="text-capitalize text-center text-danger">
        @ViewBag.Msg
    </p>
}

<fieldset>
    <legend class="text-capitalize text-center">
        <div class="row">
            <div class="col-md-2 pull-right">
                @Html.ActionLink("Back to List", "Index", new { Id = Model.Id }, new { @class = "btn btn-sm btn-default" })
            </div>
            <div class="col-md-4">
                State: @Model.Name
            </div>
            <div class="col-md-2 pull-left">
                Cities
            </div>
        </div>

    </legend>

    <div class="panel panel-primary">
        <div class="panel-heading">
            <i class="glyphicon glyphicon-plus-sign"></i>  Add New
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("Create", "City", FormMethod.Post, new { @id = "addCitiesForm", @class = "Form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" value="@Model.Id" />
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @for (int index = 0; index < limit; index++)
                    {
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @if (ViewBag.Success)
                                    {
                                        @Html.EditorFor(model => model.Cities[index].Name, "[" + index + "].Name", new { htmlAttributes = new { @class = "form-control", @placeholder = "City's " + @index + " Name" } })
                                    }
                                    else
                                    {
                                        @Html.Editor("[" + index + "].Name", new { htmlAttributes = new { @class = "form-control", @placeholder = "City's " + @index + " Name" } })
                                    }
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Code", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.Editor("[" + index + "].Code", new { htmlAttributes = new { @class = "form-control", @placeholder = "City's " + @index + " short code" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>


                    }


                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-default" value="Submit" />
                    </div>
                </div>
            }

        </div>
    </div>



</fieldset>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
